import discord
from discord import app_commands
import os
import asyncio
from dotenv import load_dotenv

# Ch·ªâ import bi·∫øn c·∫•u h√¨nh nh·∫π
from automation import KEYWORD_MAP

load_dotenv()
DISCORD_TOKEN = os.getenv("DISCORD_TOKEN")

if not DISCORD_TOKEN:
    raise ValueError("‚ö†Ô∏è DISCORD_TOKEN kh√¥ng ƒë∆∞·ª£c t√¨m th·∫•y trong bi·∫øn m√¥i tr∆∞·ªùng.")

# --- T√ÅC V·ª§ N·ªÄN ƒê·ªÇ X·ª¨ L√ù H√ÄNG ƒê·ª¢I ---
async def automation_worker(queue: asyncio.Queue):
    """
    "Ng∆∞·ªùi l√†m vi·ªác" ch·∫°y n·ªÅn vƒ©nh vi·ªÖn.
    N√≥ ch·ªù ƒë·ª£i c√¥ng vi·ªác trong h√†ng ƒë·ª£i v√† x·ª≠ l√Ω ch√∫ng.
    """
    from automation import run_automation_task
    print("‚úÖ Worker t·ª± ƒë·ªông h√≥a ƒë√£ s·∫µn s√†ng.")

    while True:
        try:
            interaction, keyword_value, keyword_name = await queue.get()
            print(f"Worker ƒë√£ nh·∫≠n c√¥ng vi·ªác cho: {keyword_name}")

            # S·ª≠a tin nh·∫Øn g·ªëc ƒë·ªÉ th√¥ng b√°o cho ng∆∞·ªùi d√πng
            await interaction.edit_original_response(
                content=f"‚è≥ ƒêang ch·∫°y k·ªãch b·∫£n cho **{keyword_name}**... Vui l√≤ng ch·ªù."
            )

            # Ch·∫°y t√°c v·ª• blocking (Selenium)
            loop = asyncio.get_running_loop()
            result = await loop.run_in_executor(
                None, run_automation_task, keyword_value
            )
            
            # G·ª≠i k·∫øt qu·∫£ b·∫±ng m·ªôt tin nh·∫Øn followup m·ªõi
            if result['status'] == 'success':
                embed = discord.Embed(
                    title=f"‚úÖ L·∫•y m√£ th√†nh c√¥ng cho {keyword_name}!",
                    description=f"M√£ c·ªßa b·∫°n l√†:",
                    color=discord.Color.green()
                )
                embed.add_field(name="üîë M√É", value=f"```\n{result['data']}\n```", inline=False)
                embed.set_footer(text=f"Y√™u c·∫ßu b·ªüi {interaction.user.display_name}")
                await interaction.followup.send(embed=embed)
            else:
                embed = discord.Embed(
                    title=f"‚ùå L·ªói khi l·∫•y m√£ cho {keyword_name}",
                    description="ƒê√£ c√≥ l·ªói x·∫£y ra trong qu√° tr√¨nh t·ª± ƒë·ªông h√≥a.",
                    color=discord.Color.red()
                )
                error_message = result['message'][:1000]
                embed.add_field(name="Chi ti·∫øt l·ªói", value=f"```{error_message}```", inline=False)
                embed.set_footer(text=f"Y√™u c·∫ßu b·ªüi {interaction.user.display_name}")
                await interaction.followup.send(embed=embed)

            # X√≥a tin nh·∫Øn "ƒêang ch·∫°y..." ban ƒë·∫ßu ƒë·ªÉ ƒë·ª° r·ªëi chat
            await interaction.edit_original_response(content="Ho√†n th√†nh!", view=None)

            queue.task_done()
        except Exception as e:
            print(f"L·ªói nghi√™m tr·ªçng trong worker: {e}")
            try:
                # C·ªë g·∫Øng th√¥ng b√°o l·ªói cho ng∆∞·ªùi d√πng
                await interaction.followup.send(f"R·∫•t ti·∫øc {interaction.user.mention}, ƒë√£ c√≥ l·ªói h·ªá th·ªëng kh√¥ng mong mu·ªën.")
            except:
                pass # B·ªè qua n·∫øu kh√¥ng g·ª≠i ƒë∆∞·ª£c tin nh·∫Øn

# --- C·∫§U H√åNH BOT CH√çNH ---
class MyClient(discord.Client):
    def __init__(self):
        intents = discord.Intents.default()
        intents.message_content = True
        super().__init__(intents=intents)
        self.synced = False
        self.task_queue = asyncio.Queue()

    async def on_ready(self):
        await self.wait_until_ready()
        if not self.synced:
            await tree.sync()
            self.synced = True
        
        asyncio.create_task(automation_worker(self.task_queue))
        print(f'‚úÖ Bot ƒë√£ ƒëƒÉng nh·∫≠p v·ªõi t√™n {self.user}.')

client = MyClient()
tree = app_commands.CommandTree(client)

keyword_choices = [
    app_commands.Choice(name=data['name'], value=key)
    for key, data in KEYWORD_MAP.items()
]

@tree.command(name="yeumoney", description="Ch·∫°y k·ªãch b·∫£n l·∫•y m√£ t·ª´ m·ªôt website ƒë∆∞·ª£c ch·ªçn")
@app_commands.describe(keyword="Ch·ªçn website b·∫°n mu·ªën ch·∫°y k·ªãch b·∫£n")
@app_commands.choices(keyword=keyword_choices)
async def yeumoney_command(interaction: discord.Interaction, keyword: app_commands.Choice[str]):
    # B∆∞·ªõc 1: X√°c nh·∫≠n t∆∞∆°ng t√°c. Bot s·∫Ω hi·ªÉn th·ªã "Bot is thinking..."
    await interaction.response.defer(ephemeral=False)
    
    # B∆∞·ªõc 2: ƒê∆∞a c√¥ng vi·ªác v√†o h√†ng ƒë·ª£i.
    job = (interaction, keyword.value, keyword.name)
    await client.task_queue.put(job)
    
    # H√†m k·∫øt th√∫c ·ªü ƒë√¢y. Worker s·∫Ω x·ª≠ l√Ω ph·∫ßn c√≤n l·∫°i.

client.run(DISCORD_TOKEN)
