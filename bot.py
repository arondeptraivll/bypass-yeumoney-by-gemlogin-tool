import discord
from discord import app_commands
import os
import asyncio
from dotenv import load_dotenv

# Ch·ªâ import bi·∫øn c·∫•u h√¨nh nh·∫π
from automation import KEYWORD_MAP

load_dotenv()
DISCORD_TOKEN = os.getenv("DISCORD_TOKEN")

if not DISCORD_TOKEN:
    raise ValueError("‚ö†Ô∏è DISCORD_TOKEN kh√¥ng ƒë∆∞·ª£c t√¨m th·∫•y trong bi·∫øn m√¥i tr∆∞·ªùng.")

# --- T√ÅC V·ª§ N·ªÄN ƒê·ªÇ CH·∫†Y SELENIUM ---
async def run_automation_in_background(interaction: discord.Interaction, keyword_value: str, keyword_name: str):
    """
    H√†m n√†y ch·∫°y trong m·ªôt t√°c v·ª• n·ªÅn ri√™ng bi·ªát.
    N√≥ th·ª±c hi·ªán c√¥ng vi·ªác n·∫∑ng v√† g·ª≠i l·∫°i k·∫øt qu·∫£ khi ho√†n th√†nh.
    """
    try:
        # Import module n·∫∑ng B√äN TRONG t√°c v·ª• n·ªÅn
        from automation import run_automation_task
        
        print(f"B·∫Øt ƒë·∫ßu t√°c v·ª• n·ªÅn cho {keyword_name}...")
        loop = asyncio.get_running_loop()
        result = await loop.run_in_executor(
            None, run_automation_task, keyword_value
        )
        
        # G·ª≠i k·∫øt qu·∫£ b·∫±ng interaction.followup
        if result['status'] == 'success':
            embed = discord.Embed(
                title=f"‚úÖ L·∫•y m√£ th√†nh c√¥ng cho {keyword_name}!",
                description=f"M√£ c·ªßa b·∫°n l√†:",
                color=discord.Color.green()
            )
            embed.add_field(name="üîë M√É", value=f"```\n{result['data']}\n```", inline=False)
            embed.set_footer(text=f"Y√™u c·∫ßu b·ªüi {interaction.user.display_name}")
            await interaction.followup.send(embed=embed)
        else:
            embed = discord.Embed(
                title=f"‚ùå L·ªói khi l·∫•y m√£ cho {keyword_name}",
                description="ƒê√£ c√≥ l·ªói x·∫£y ra trong qu√° tr√¨nh t·ª± ƒë·ªông h√≥a.",
                color=discord.Color.red()
            )
            error_message = result['message'][:1000]
            embed.add_field(name="Chi ti·∫øt l·ªói", value=f"```{error_message}```", inline=False)
            embed.set_footer(text=f"Y√™u c·∫ßu b·ªüi {interaction.user.display_name}")
            await interaction.followup.send(embed=embed)
            
    except Exception as e:
        print(f"L·ªói nghi√™m tr·ªçng trong t√°c v·ª• n·ªÅn: {e}")
        await interaction.followup.send(
            f" R·∫•t ti·∫øc {interaction.user.mention}, ƒë√£ c√≥ l·ªói h·ªá th·ªëng kh√¥ng mong mu·ªën x·∫£y ra."
        )

# --- C·∫§U H√åNH BOT CH√çNH ---
class MyClient(discord.Client):
    def __init__(self):
        intents = discord.Intents.default()
        intents.message_content = True
        super().__init__(intents=intents)
        self.synced = False

    async def on_ready(self):
        await self.wait_until_ready()
        if not self.synced:
            await tree.sync()
            self.synced = True
        print(f'‚úÖ Bot ƒë√£ ƒëƒÉng nh·∫≠p v·ªõi t√™n {self.user}.')

client = MyClient()
tree = app_commands.CommandTree(client)

keyword_choices = [
    app_commands.Choice(name=data['name'], value=key)
    for key, data in KEYWORD_MAP.items()
]

@tree.command(name="yeumoney", description="Ch·∫°y k·ªãch b·∫£n l·∫•y m√£ t·ª´ m·ªôt website ƒë∆∞·ª£c ch·ªçn")
@app_commands.describe(keyword="Ch·ªçn website b·∫°n mu·ªën ch·∫°y k·ªãch b·∫£n")
@app_commands.choices(keyword=keyword_choices)
async def yeumoney_command(interaction: discord.Interaction, keyword: app_commands.Choice[str]):
    # B∆∞·ªõc 1: Ph·∫£n h·ªìi ngay l·∫≠p t·ª©c (lu√¥n th√†nh c√¥ng)
    await interaction.response.defer(ephemeral=False, thinking=True)
    
    # B∆∞·ªõc 2: G·ª≠i tin nh·∫Øn x√°c nh·∫≠n ban ƒë·∫ßu
    await interaction.followup.send(
        f"‚è≥ {interaction.user.mention} ƒë√£ y√™u c·∫ßu l·∫•y m√£ cho **{keyword.name}**. "
        f"Bot ƒëang x·ª≠ l√Ω trong n·ªÅn, vui l√≤ng ch·ªù k·∫øt qu·∫£..."
    )
    
    # B∆∞·ªõc 3: T·∫°o v√† kh·ªüi ch·∫°y t√°c v·ª• n·ªÅn ƒë·ªÉ l√†m vi·ªác n·∫∑ng
    # H√†m yeumoney_command s·∫Ω k·∫øt th√∫c ngay l·∫≠p t·ª©c sau d√≤ng n√†y.
    asyncio.create_task(
        run_automation_in_background(interaction, keyword.value, keyword.name)
    )

# Ch·∫°y bot
client.run(DISCORD_TOKEN)
