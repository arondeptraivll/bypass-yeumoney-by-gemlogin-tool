import discord
from discord import app_commands
import os
import asyncio
from dotenv import load_dotenv

# --- THAY ƒê·ªîI: Ch·ªâ import KEYWORD_MAP, kh√¥ng import c·∫£ module n·∫∑ng ---
from automation import KEYWORD_MAP

load_dotenv()
DISCORD_TOKEN = os.getenv("DISCORD_TOKEN")

if not DISCORD_TOKEN:
    raise ValueError("‚ö†Ô∏è DISCORD_TOKEN kh√¥ng ƒë∆∞·ª£c t√¨m th·∫•y trong bi·∫øn m√¥i tr∆∞·ªùng.")

class MyClient(discord.Client):
    def __init__(self):
        intents = discord.Intents.default()
        intents.message_content = True
        super().__init__(intents=intents)
        self.synced = False

    async def on_ready(self):
        await self.wait_until_ready()
        if not self.synced:
            await tree.sync()
            self.synced = True
        print(f'‚úÖ Bot ƒë√£ ƒëƒÉng nh·∫≠p v·ªõi t√™n {self.user}.')

client = MyClient()
tree = app_commands.CommandTree(client)

keyword_choices = [
    app_commands.Choice(name=data['name'], value=key)
    for key, data in KEYWORD_MAP.items()
]

@tree.command(name="yeumoney", description="Ch·∫°y k·ªãch b·∫£n l·∫•y m√£ t·ª´ m·ªôt website ƒë∆∞·ª£c ch·ªçn")
@app_commands.describe(keyword="Ch·ªçn website b·∫°n mu·ªën ch·∫°y k·ªãch b·∫£n")
@app_commands.choices(keyword=keyword_choices)
async def yeumoney_command(interaction: discord.Interaction, keyword: app_commands.Choice[str]):
    # B∆∞·ªõc 1: Ph·∫£n h·ªìi ngay l·∫≠p t·ª©c ƒë·ªÉ kh√¥ng b·ªã timeout. ƒê√¢y l√† ∆∞u ti√™n s·ªë 1.
    await interaction.response.defer(ephemeral=False)
    
    user = interaction.user
    chosen_keyword_name = keyword.name
    chosen_keyword_value = keyword.value
    
    await interaction.followup.send(
        f"‚è≥ {user.mention} ƒë√£ y√™u c·∫ßu l·∫•y m√£ cho **{chosen_keyword_name}**. Qu√° tr√¨nh n√†y c√≥ th·ªÉ m·∫•t 1-2 ph√∫t, vui l√≤ng ch·ªù..."
    )

    try:
        # --- THAY ƒê·ªîI: Import module n·∫∑ng ·ªü ƒë√¢y, SAU KHI ƒë√£ defer ---
        from automation import run_automation_task
        
        # Ch·∫°y t√°c v·ª• blocking (Selenium) trong m·ªôt lu·ªìng kh√°c
        loop = asyncio.get_running_loop()
        result = await loop.run_in_executor(
            None, run_automation_task, chosen_keyword_value
        )
        
        if result['status'] == 'success':
            embed = discord.Embed(
                title=f"‚úÖ L·∫•y m√£ th√†nh c√¥ng cho {chosen_keyword_name}!",
                description=f"M√£ c·ªßa b·∫°n l√†:",
                color=discord.Color.green()
            )
            embed.add_field(name="üîë M√É", value=f"```\n{result['data']}\n```", inline=False)
            embed.set_footer(text=f"Y√™u c·∫ßu b·ªüi {user.display_name}")
            await interaction.followup.send(embed=embed)
        else:
            embed = discord.Embed(
                title=f"‚ùå L·ªói khi l·∫•y m√£ cho {chosen_keyword_name}",
                description="ƒê√£ c√≥ l·ªói x·∫£y ra trong qu√° tr√¨nh t·ª± ƒë·ªông h√≥a.",
                color=discord.Color.red()
            )
            error_message = result['message'][:1000]
            embed.add_field(name="Chi ti·∫øt l·ªói", value=f"```{error_message}```", inline=False)
            embed.set_footer(text=f"Y√™u c·∫ßu b·ªüi {user.display_name}")
            await interaction.followup.send(embed=embed)
            
    except Exception as e:
        print(f"L·ªói nghi√™m tr·ªçng trong l·ªánh /yeumoney: {e}")
        await interaction.followup.send(
            f" R·∫•t ti·∫øc {user.mention}, ƒë√£ c√≥ l·ªói h·ªá th·ªëng kh√¥ng mong mu·ªën x·∫£y ra. Vui l√≤ng th·ª≠ l·∫°i sau."
        )

# Ch·∫°y bot
client.run(DISCORD_TOKEN)
